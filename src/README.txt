此次工程注意点：
    在用pom.xml导入时，要看maven-repo里面有什么，不然会导致太多错误信息在日志里面，删的很辛苦
    Mapper.xml和Mapper最好放在一起，不然难找
    同时应该在pom.xml中，<bulid>...</build>中添加：
        <resources>
              <resource>
                <directory>src/main/java</directory>
                <includes>
                  <include>**/*.properties</include>
                  <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
              </resource>
        </resources>
    注：**代表任意目录，*代表任意文件

编程思路：
用户登录部分：
    1.数据库创建对应的用户表 user1(MySQL)
    2.前台
        登录页面 login.jsp
            用户登录 JS校验
                登录表单验证
                1.给登录表单绑定点击事件
                2.获取用户名和密码的值
                3.判断姓名是否为空
                    如果为空，弹窗，并且return
                4.判断密码是否为空
                    如果为空，弹窗，并且return
                5.手动提交表单
        首页 index.jsp
    3.后台实现
        登录功能
        1.接收客户端传来的数据（接收参数：用户名和密码）
        2.参数的非空判断
            1）为空，设置状态，设置提示信息，设置回显信息，
            将消息存在request作用域中，请求跳转发送到登录页面
            return
            2）不为空，在数据库中查找
        3.通过用户姓名查询用户对象
        4.判断用户对象是否为空
            1）为空，通过消息模型对象返回结果
            2）不为空
                ① 在数据库查询
                ② 跳转首页（请求转发/重定向）跳转到首页后，用户信息设置到session作用域中
主页部分：
    1.数据库存储商品信息 product（ id，名称，价格，种类，描述信息，图片）
      数据库 customer 存product id和user name的绑定
    2.前台实现
        1）读取数据库中的数据，按种类，商家分类
           左端的变为类别/商家，点击后刷新页面变成该类/商家的东西
        2）每个商品绑定点击事件，通过ID传参到商品页面
           商品左上角的删除按键没有权限
        3）进入商家管理需要管理员权限，增添/修改商品需要你是该商品商家


个人页面：
    1.管理员和商家身份可以自动切换
    2.除了姓名，其他信息可改
商家页面：（需要管理员权限）
    1.搜索框自动展开，搜索敲回车即可。
    2.点击列表元素可修改，点击删除键即时删除
    3.查找结束后需要点击右上角刷新按钮才能重新展示所有商家